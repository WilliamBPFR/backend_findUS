generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model avistamiento {
  id                Int                   @id @default(autoincrement())
  idusuario         Int?
  idpublicacion     Int?
  ubicacion         Unsupported("point")?
  fechahora         DateTime?             @db.Timestamp(6)
  detalles          String?               @db.VarChar(255)
  verificado        Boolean?
  idestatus         Int?
  fechacreacion     DateTime?             @default(now()) @db.Timestamp(6)
  estado            estado?               @relation(fields: [idestatus], references: [id], onDelete: NoAction, onUpdate: NoAction)
  publicacion       publicacion?          @relation(fields: [idpublicacion], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario           usuario?              @relation(fields: [idusuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  fotosavistamiento fotosavistamiento[]
}

model cambiarcontrasena {
  id                    Int       @id @default(autoincrement())
  idusuario             Int?
  codigoverificacion    String?   @db.VarChar(255)
  idestatus             Int?
  fechacreacion         DateTime? @default(now()) @db.Timestamp(6)
  fechaexpiracioncodigo DateTime? @db.Timestamp(6)
  vigente               Boolean?
  estado                estado?   @relation(fields: [idestatus], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario               usuario?  @relation(fields: [idusuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model categoriamaterial {
  id                      Int                @id @default(autoincrement())
  nombrecategoriamaterial String?            @db.VarChar(255)
  fechacreacion           DateTime?          @default(now()) @db.Timestamp(6)
  recursoeducativo        recursoeducativo[]
}

model chatpublicacion {
  id            Int          @id @default(autoincrement())
  idusuario     Int?
  idpublicacion Int?
  texto         String?      @db.VarChar(255)
  fechacreacion DateTime?    @default(now()) @db.Timestamp(6)
  publicacion   publicacion? @relation(fields: [idpublicacion], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario       usuario?     @relation(fields: [idusuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model comentario {
  id            Int          @id @default(autoincrement())
  idusuario     Int?
  idpublicacion Int?
  texto         String?      @db.VarChar(255)
  fechacreacion DateTime?    @default(now()) @db.Timestamp(6)
  publicacion   publicacion? @relation(fields: [idpublicacion], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario       usuario?     @relation(fields: [idusuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model estado {
  id                Int                 @id @default(autoincrement())
  nombreestado      String?             @db.VarChar(255)
  tipoestado        String?             @db.VarChar(255)
  fechacreacion     DateTime?           @default(now()) @db.Timestamp(6)
  avistamiento      avistamiento[]
  cambiarcontrasena cambiarcontrasena[]
  publicacion       publicacion[]
  recursoeducativo  recursoeducativo[]
  usuario           usuario[]
}

model fotosavistamiento {
  id             Int           @id @default(autoincrement())
  urlarchivo     String?       @db.VarChar(255)
  idavistamiento Int?
  fechacreacion  DateTime?     @default(now()) @db.Timestamp(6)
  avistamiento   avistamiento? @relation(fields: [idavistamiento], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model fotospublicacion {
  id                    Int                  @id @default(autoincrement())
  urlarchivo            String?
  idtipofotopublicacion Int?
  idpublicacion         Int?
  fechacreacion         DateTime?            @default(now()) @db.Timestamp(6)
  publicacion           publicacion?         @relation(fields: [idpublicacion], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tipofotopublicacion   tipofotopublicacion? @relation(fields: [idtipofotopublicacion], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model idiomaaplicacion {
  id            Int       @id @default(autoincrement())
  nombreidioma  String?   @db.VarChar(255)
  fechacreacion DateTime? @default(now()) @db.Timestamp(6)
}

model publicacion {
  id                              Int                @id @default(autoincrement())
  idusuario                       Int?
  nombredesaparecido              String?            @db.VarChar(255)
  idtipodocumento                 Int?
  numerodocumentodesaparecido     String?            @db.VarChar(11)
  edad                            Int?
  telefono                        String?            @db.VarChar(10)
  fechadesaparicion               DateTime?          @db.Timestamp(6)
  descripcionpersonadesaparecido  String?            @db.VarChar(255)
  relacionusuariocondesaparecido  String?            @db.VarChar(255)
  informacioncontacto             String?            @db.VarChar(255)
  ubicaci_n_desaparicion_latitud  String?            @map("ubicación_desaparicion_latitud") @db.VarChar(255)
  ubicaci_n_desaparicion_longitud String?            @map("ubicación_desaparicion_longitud") @db.VarChar(255)
  verificado                      Boolean?
  idestado                        Int?
  fechacreacion                   DateTime?          @default(now()) @db.Timestamp(6)
  fechanacimiento                 DateTime?          @db.Timestamp(6)
  avistamiento                    avistamiento[]
  chatpublicacion                 chatpublicacion[]
  comentario                      comentario[]
  fotospublicacion                fotospublicacion[]
  estado                          estado?            @relation(fields: [idestado], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tipodocumento                   tipodocumento?     @relation(fields: [idtipodocumento], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario                         usuario?           @relation(fields: [idusuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model recursoeducativo {
  id                  Int                @id @default(autoincrement())
  idusuario           Int?
  idcategoriamaterial Int?
  nombre              String?            @db.VarChar(255)
  descripcion         String?            @db.VarChar(255)
  idestado            Int?
  urlmaterial         String?            @db.VarChar(255)
  fechacreacion       DateTime?          @default(now()) @db.Timestamp(6)
  categoriamaterial   categoriamaterial? @relation(fields: [idcategoriamaterial], references: [id], onDelete: NoAction, onUpdate: NoAction)
  estado              estado?            @relation(fields: [idestado], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario             usuario?           @relation(fields: [idusuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model rol {
  id            Int       @id @default(autoincrement())
  nombrerol     String?   @db.VarChar(255)
  fechacreacion DateTime? @default(now()) @db.Timestamp(6)
  usuario       usuario[]
}

model tipodocumento {
  id                  Int           @id @default(autoincrement())
  nombretipodocumento String?       @db.VarChar(255)
  fechacreacion       DateTime?     @default(now()) @db.Timestamp(6)
  publicacion         publicacion[]
  usuario             usuario[]
}

model tipofotopublicacion {
  id                        Int                @id @default(autoincrement())
  nombretipofotopublicacion String?            @db.VarChar(255)
  fechacreacion             DateTime?          @default(now()) @db.Timestamp(6)
  fotospublicacion          fotospublicacion[]
}

model usuario {
  id                        Int                 @id @default(autoincrement())
  idauthusuario             String?             @db.VarChar(255)
  nombre                    String?             @db.VarChar(255)
  apellido                  String?             @db.VarChar(255)
  email                     String?             @db.VarChar(255)
  fechanacimiento           DateTime?           @db.Timestamp(6)
  numerotelefono            String?             @db.VarChar(255)
  urlfotoperfil             String?             @db.VarChar(255)
  verificado                Boolean?
  codigoverificacionusuario String?             @db.VarChar(255)
  idtipodocumento           Int?
  numerodocumento           String?             @db.VarChar(255)
  idrol                     Int?
  idestado                  Int?
  fechacreacion             DateTime?           @default(now()) @db.Timestamp(6)
  avistamiento              avistamiento[]
  cambiarcontrasena         cambiarcontrasena[]
  chatpublicacion           chatpublicacion[]
  comentario                comentario[]
  publicacion               publicacion[]
  recursoeducativo          recursoeducativo[]
  estado                    estado?             @relation(fields: [idestado], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rol                       rol?                @relation(fields: [idrol], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tipodocumento             tipodocumento?      @relation(fields: [idtipodocumento], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
